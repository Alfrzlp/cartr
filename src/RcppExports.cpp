// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cartReg
Rcpp::List cartReg(NumericVector& y, DataFrame& x, int max_depth, int min_samples_leaf, int min_samples_split, double min_ig);
RcppExport SEXP _cartlm_cartReg(SEXP ySEXP, SEXP xSEXP, SEXP max_depthSEXP, SEXP min_samples_leafSEXP, SEXP min_samples_splitSEXP, SEXP min_igSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< DataFrame& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type max_depth(max_depthSEXP);
    Rcpp::traits::input_parameter< int >::type min_samples_leaf(min_samples_leafSEXP);
    Rcpp::traits::input_parameter< int >::type min_samples_split(min_samples_splitSEXP);
    Rcpp::traits::input_parameter< double >::type min_ig(min_igSEXP);
    rcpp_result_gen = Rcpp::wrap(cartReg(y, x, max_depth, min_samples_leaf, min_samples_split, min_ig));
    return rcpp_result_gen;
END_RCPP
}
// predictCart
Rcpp::NumericVector predictCart(Rcpp::List& model, DataFrame& X, std::string method);
RcppExport SEXP _cartlm_predictCart(SEXP modelSEXP, SEXP XSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type model(modelSEXP);
    Rcpp::traits::input_parameter< DataFrame& >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(predictCart(model, X, method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cartlm_cartReg", (DL_FUNC) &_cartlm_cartReg, 6},
    {"_cartlm_predictCart", (DL_FUNC) &_cartlm_predictCart, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_cartlm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
